package Controller;

import Model.ModeloIniciarSesion;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import View.IniciarSesion;
import View.PrincipalAdmin;
import View.InicioPrincipal;
import View.RegistroCliente;
import View.OlvidoContraseña;
import Conecction.ConnectionMongo;

public class ControladorIniciarSesion implements ActionListener {

    //ATRIBUTOS DE MODELO Y VISTA
    private IniciarSesion vista;
    private ModeloIniciarSesion modelo;
    //VISTA INICIO PIRNCIPAL Y PRINCIPAL ADMIN
    private PrincipalAdmin vistaAdmin;
    private InicioPrincipal vistaPrincipal;
    private RegistroCliente vistaRegistro;
    private OlvidoContraseña vistaContrasenia;

    ConnectionMongo mongo = new ConnectionMongo();

    public ControladorIniciarSesion(IniciarSesion vista, ModeloIniciarSesion modelo) {
        this.vista = vista;
        this.modelo = modelo;

        vistaAdmin = new PrincipalAdmin();
        vistaPrincipal = new InicioPrincipal();
        vistaRegistro = new RegistroCliente();
        vistaContrasenia = new OlvidoContraseña();

        this.vista.BtnLogin.addActionListener(this);
        this.vista.BtnRegister.addActionListener(this);
        this.vista.BtnForgotPassword.addActionListener(this);
        this.vista.ChViewPassword.addActionListener(this);
    }

    public void starView() {
        vista.setVisible(true);
    }

    private void openAdmin() {
        mongo.setNameCollection("Rutas");
        vistaAdmin.setLocationRelativeTo(null); // Usa la instancia existente
        vistaAdmin.setVisible(true); // Muestra la ventana
        vista.setVisible(false); // Oculta la ventana de inicio
        vistaAdmin.setLocationRelativeTo(null); // USA INSTANCIA EXISTENTE
        vistaAdmin.setVisible(true); // MUESTRA VENTANA ADMIN
        vista.setVisible(false); // OCULTA INICIAR SESION
    }

    private void openClient() {
        vistaPrincipal.setLocationRelativeTo(null); // Usa la instancia existente
        vistaPrincipal.setVisible(true); // Muestra la ventana
        vista.setVisible(false); // Oculta la ventana de inicio
        vistaPrincipal.setLocationRelativeTo(null); // USA INSTANCIA EXISTENTE
        vistaPrincipal.setVisible(true); // MUESTRA VENTANA CLIENTE
        vista.setVisible(false); // OCULTA INICIAR SESION
        mongo.setNameCollection("Destinos");
    }

    //ESTE METODO NOS PERMITIRA VER LA CONTRASEÑA SI SELECCIONAMOS EL CHECK BOX
    public void viewPassword() {
        if (vista.ChViewPassword.isSelected()) {
            vista.PassPassword.setEchoChar((char) 0);
        } else {
            vista.PassPassword.setEchoChar('•');
        }
    }

    public void fieldValidate() {
        String loggedEmail = vista.TxtEmail.getText();
        String loggedPassword = new String(vista.PassPassword.getPassword());

        // Validar campos vacíos
        if (loggedEmail.isEmpty() || loggedPassword.isEmpty()) {
            vista.LbInvalidUser.setText("Campos obligatorios");
            vista.LbInvalidPassword.setText("Campos obligatorios");
            vista.LbInvalidUser.setVisible(true);
            vista.LbInvalidPassword.setVisible(true);
        } else {
            // Asignar valores al modelo antes de validarlos
            modelo.setEmail(loggedEmail);
            modelo.setPassword(loggedPassword);

            // Ocultar mensajes de error y validar
            vista.LbInvalidUser.setVisible(false);
            vista.LbInvalidPassword.setVisible(false);

            String role = modelo.Validate();
            switch (role) {
                case "admin":
                    openAdmin();
                    break;
                case "client":
                    openClient();
                    break;
                default:
                    vista.LbInvalidUser.setText("Correo o contraseña inválida");
                    vista.LbInvalidPassword.setText("Correo o contraseña inválida");
                    vista.LbInvalidUser.setVisible(true);
                    vista.LbInvalidPassword.setVisible(true);
                    break;
            }
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == vista.BtnLogin) {
            fieldValidate();
        }
        if (e.getSource() == vista.BtnRegister) {
            vista.setVisible(false);
            vistaRegistro.setVisible(true);

        }
        if (e.getSource() == vista.BtnForgotPassword) {
            vista.setVisible(false);
            vistaContrasenia.setVisible(true);
        }
    }
}
