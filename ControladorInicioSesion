package Controller;

import Model.ModeloIniciarSesion;
import Model.Usuario;
import View.IniciarSesion;
import View.PrincipalAdmin;
import View.InicioPrincipal;
import Connection.ConnectionMongo;
import Model.ModeloInicioPrincipal;
import Model.ModeloOlvidoContraseña;
import Model.ModeloPrincipalAdmin;
import Model.ModeloRegistrarCliente;
import View.OlvidoContraseña;
import View.RegistroCliente;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;

public class ControladorIniciarSesion implements ActionListener {

    private IniciarSesion vista;
    private ModeloIniciarSesion modelo;
    private ControladorInicioPrincipal controladorPrincipal;
    ConnectionMongo mongo = new ConnectionMongo();
    private Usuario usuarioActual;

    RegistroCliente vistaRegistro = new RegistroCliente();
    ModeloRegistrarCliente modeloRegistro = new ModeloRegistrarCliente("", "", 0, "", "", "", "", vistaRegistro);
    ControladorRegistroCliente registro = new ControladorRegistroCliente(vistaRegistro, modeloRegistro);

    public ControladorIniciarSesion(IniciarSesion vista, ModeloIniciarSesion modelo) {
        this.vista = vista;
        this.modelo = modelo;

        this.vista.BtnLogin.addActionListener((ActionListener) this);
        this.vista.BtnRegister.addActionListener(this);
        this.vista.BtnForgotPassword.addActionListener(this);
        this.vista.ChViewPassword.addActionListener(this);
    }

    public void starView() {
        vista.setVisible(true);
    }

    public void setControladorPrincipal(ControladorInicioPrincipal controladorPrincipal) {
        this.controladorPrincipal = controladorPrincipal;
    }

    private void openAdmin() {
        PrincipalAdmin vistaA = new PrincipalAdmin();
        ModeloPrincipalAdmin modeloA = new ModeloPrincipalAdmin("", "", "", "");
        ControladorPrincipalAdmin admin = new ControladorPrincipalAdmin(vistaA, modeloA);
        admin.starView();
        vista.setVisible(false);
    }

    private void openClient() {
        //controladorPrincipal.setUsuarioActual(usuarioActual);
        InicioPrincipal vistaPrincipal = new InicioPrincipal();
        ModeloInicioPrincipal modeloPrincipal = new ModeloInicioPrincipal("", 0);
        controladorPrincipal = new ControladorInicioPrincipal(vistaPrincipal, modeloPrincipal);
        controladorPrincipal.starView();
    }

    public void btnRegister() {
        registro.startView();
        vista.setVisible(false);
    }

    public void btnForgot() {
        OlvidoContraseña vistaC = new OlvidoContraseña();
        ModeloOlvidoContraseña modeloC = new ModeloOlvidoContraseña("", "", "");
        ControladorOlvidoContraseña contrasenia = new ControladorOlvidoContraseña(vistaC, modeloC);
        contrasenia.buscarEmail();
        vista.setVisible(false);
    }

    public void viewPassword() {
        if (vista.ChViewPassword.isSelected()) {
            vista.PassPassword.setEchoChar((char) 0);
        } else {
            vista.PassPassword.setEchoChar('•');
        }
    }

    public void fieldValidate() {
        String loggedEmail = vista.TxtEmail.getText();
        String loggedPassword = new String(vista.PassPassword.getPassword());

        if (loggedEmail.isEmpty() || loggedPassword.isEmpty()) {
            vista.LbInvalidUser.setText("Campos obligatorios");
            vista.LbInvalidPassword.setText("Campos obligatorios");
            vista.LbInvalidUser.setVisible(true);
            vista.LbInvalidPassword.setVisible(true);
        } else {
            modelo.setEmail(loggedEmail);
            modelo.setPassword(loggedPassword);

            vista.LbInvalidUser.setVisible(false);
            vista.LbInvalidPassword.setVisible(false);

            String role = modelo.Validate(loggedEmail, loggedPassword);
            if (!role.equals("invalid")) {
                usuarioActual = new Usuario("Nombre del Usuario", loggedEmail); // Ajusta según sea necesario
                if (role.equals("admin")) {
                    openAdmin();
                } else if (role.equals("client")) {
                    if (modelo.signin(loggedEmail)) {
                        JOptionPane.showMessageDialog(vista, "Ya tienes una sesión activa");
                    } else {
                        vista.setVisible(false);
                    }
                    openClient();
                }
            } else {
                vista.LbInvalidUser.setText("Correo o contraseña inválida");
                vista.LbInvalidPassword.setText("Correo o contraseña inválida");
                vista.LbInvalidUser.setVisible(true);
                vista.LbInvalidPassword.setVisible(true);
            }
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == vista.BtnLogin) {
            fieldValidate();
        }
        if (e.getSource() == vista.BtnRegister) {
            btnRegister();
        } else if (e.getSource() == vista.ChViewPassword) {
            viewPassword();
        }
        if (e.getSource() == vista.BtnForgotPassword) {
            btnForgot();
        }
    }
}
